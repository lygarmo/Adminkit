{% extends 'base.html.twig' %}

{% block title %}Libro index{% endblock %}

{% block body %}
<head>
    <title>Lista de Libros</title>
    <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.11.5/css/jquery.dataTables.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@sweetalert2/theme-bootstrap-4/bootstrap-4.min.css">

    <style>
        a { color: black; }
        tr th { background-color: steelblue; }
        tr td { background-color: rgb(205, 215, 222); }
        body { text-align: center; }
    </style>
</head>

<body>
    <h1>Libro index</h1>

    <table class="table" id="tablaLibros">
        <thead>
            <tr>
                <th>Id</th>
                <th>Titulo</th>
                <th>Año publicacion</th>
                <th>Autor</th>
                <th>Editorial</th>
                <th>Opciones</th>
            </tr>
        </thead>
        <tbody>
        {% for libro in libros %}
            <tr>
                <td>{{ libro.id }}</td>
                <td>{{ libro.titulo }}</td>
                <td>{{ libro.aPublicacion }}</td>
                <td>{{ libro.autor.nombre }}</td>
                <td>{{ libro.editorial.nombre }}</td>
                <td>
                    <form method="post" action="{{ path('app_popup_delete', {'id': libro.id}) }}" id="deleteForm{{ libro.id }}">
                        <input type="hidden" name="_token" value="{{ csrf_token('delete' ~ libro.id) }}">
                        <button type="button" class="btn btn-danger" onclick="confirmarEliminacion('{{ libro.id }}')">
                            Eliminar
                        </button>
                    </form>
                    <br>
                    <a href="{{ path('app_datetable_edit', {'id': libro.id}) }}">
                        <i class="fas fa-edit" style="color: grey;"> Editar</i>
                    </a>
                </td>
            </tr>
        {% else %}
            <tr>
                <td colspan="6">No existen registros</td>
            </tr>
        {% endfor %}
        </tbody>
    </table>

    <!-- Botón para abrir el modal de inserción de libro -->
    <button type="button" class="btn btn-success" onclick="abrirFormularioInsercion()">
        <i class="fas fa-plus" style="color: white;"> Insertar nuevo libro</i>
    </button>

    <!-- Modal del Formulario -->
<div class="modal" tabindex="-1" id="modalFormularioLibro">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Insertar Nuevo Libro</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="formLibro" action="{{ path('app_libro_ajax_create') }}" method="POST">
                    <div class="mb-3">
                        <label for="titulo" class="form-label">Título</label>
                        <input type="text" id="titulo" name="titulo" class="form-control" required>
                    </div>
                    <div class="mb-3">
                        <label for="anioPublicacion" class="form-label">Año de Publicación</label>
                        <input type="number" id="anioPublicacion" name="aPublicacion" class="form-control" required>
                    </div>
                    <div class="mb-3">
    <label for="autor" class="form-label">Autor</label>
    <select id="autor" name="autor" class="form-select" required>
        <option value="">Seleccione un autor</option>
        {% if autores is defined %}
            {% for autor in autores %}
                <option value="{{ autor.id }}">{{ autor.nombre }}</option>
            {% endfor %}
        {% endif %}
    </select>
</div>
                    <div class="mb-3">
    <label for="editorial" class="form-label">Editorial</label>
   <select id="editorial" name="editorial" class="form-select" required>
    <option value="">Seleccione una editorial</option>
    {% if editoriales is defined %}
        {% for editorial in editoriales %}
            <option value="{{ editorial.id }}">{{ editorial.nombre }}</option>
        {% endfor %}
    {% endif %}
</select>
</div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
                        <button type="submit" class="btn btn-primary">Guardar</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

    <script type="text/javascript" charset="utf8" src="https://code.jquery.com/jquery-3.5.1.js"></script>
    <script type="text/javascript" charset="utf8" src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        $(document).ready(function() {
            $('#tablaLibros').DataTable();  // Inicializa DataTables en la tabla con id "tablaLibros"
        });

        function confirmarEliminacion(libroId) {
            // Llamar a SweetAlert2 para confirmar la eliminación
            Swal.fire({
                title: '¿Estás seguro de eliminar este libro?',
                text: "Esta acción no puede deshacerse.",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Sí, eliminar',
                cancelButtonText: 'Cancelar',
                reverseButtons: true
            }).then((result) => {
                if (result.isConfirmed) {
                    // Si se confirma, enviar el formulario de eliminación
                    document.getElementById('deleteForm' + libroId).submit();
                }
            });
        }

        // Función para abrir el modal
    function abrirFormularioInsercion() {
        const modal = new bootstrap.Modal(document.getElementById('modalFormularioLibro'));
        modal.show();
    }

    // Manejar el envío del formulario con AJAX
    document.getElementById('formLibro').addEventListener('submit', function(e) {
        e.preventDefault();
        
        const formData = {
            titulo: document.getElementById('titulo').value,
            aPublicacion: document.getElementById('anioPublicacion').value,
            autor: document.getElementById('autor').value,
            editorial: document.getElementById('editorial').value
        };

        fetch('{{ path("app_libro_ajax_create") }}', {
    method: 'POST',
    headers: {
        'Content-Type': 'application/json',
        'X-Requested-With': 'XMLHttpRequest'
    },
    body: JSON.stringify(formData)
})
        .then(response => {
            if (!response.ok) {
                throw new Error('Error en la respuesta del servidor');
            }
            return response.json();
        })
        .then(data => {
            if (data.success) {
                // Cerrar el modal
                const modal = bootstrap.Modal.getInstance(document.getElementById('modalFormularioLibro'));
                modal.hide();
                
                // Mostrar notificación de éxito
                Swal.fire({
                    title: 'Éxito!',
                    text: 'El libro se ha añadido correctamente',
                    icon: 'success',
                    confirmButtonText: 'OK'
                }).then(() => {
                    // Recargar la página para ver los cambios
                    window.location.reload();
                });
            } else {
                // Mostrar errores si los hay
                Swal.fire({
                    title: 'Error!',
                    text: data.message || 'Hubo un problema al guardar el libro',
                    icon: 'error',
                    confirmButtonText: 'OK'
                });
            }
        })
        .catch(error => {
            Swal.fire({
                title: 'Error!',
                text: error.message || 'Hubo un problema al enviar el formulario',
                icon: 'error',
                confirmButtonText: 'OK'
            });
        });
    });
    </script>
</body>
{% endblock %}
